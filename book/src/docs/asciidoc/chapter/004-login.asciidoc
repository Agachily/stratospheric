[[login-feature]]
== Login Feature

Introduction chapter about this first feature.

- We want to secure some parts of our application
- We want that our users can register for a profile
- Within the registration process the user is asked to upload a profile image for which we can create a thumbnail (e.g. 200x200px) using an event-based (S3ObjectCreated) AWS Lambda
- Technically speaking: Protect Spring Web MVC endpoints with OAuth2 (JWT Token Authentication)

== Basics about OAuth2

- Introduction to the basic concepts -> Resource Owner, Identity Provider Client
- What are the different OAuth2 flows
- What will we use for our application

Idea: Marco Behler is currently working on an extensive OAuth2 guide, maybe he wants to contribute this part and reference his detailed guide

=== Using AWS Cognito for User Management with Spring Security

==== Introduction to AWS Cognito

- What does AWS Cognito offer and frees us from development effort: user management, OAuth2 login, etc.
- What are the alternatives at AWS an in general?
- Defining the AWS Cognito terms: User Pool, etc.

==== Building Block: Manage user pools with AWS Cognito

- Could be first some screenshots and explanation of the AWS Console (how to reach it, what is there to configure)
- Then introduction to the AWS CloudFormation stack for this service

==== Building Block: Use AWS Cognito as OAuth 2 Authorization Server with Spring Security

- Show the required configuration settings and explain what they are doing
- Protect the first pages with Spring Security
- Show how login works, e.g. with some basic screenshots

Idea: Bonus-chapter on how to develop locally and how to mock it during integration test

==== Building Block: User registration with AWS Cognito

- Show relevant Thymeleaf view parts
- Explain how to register a new user with the AWS SDK
- Show how to upload the profile picture for further processing

==== (Optional) Building Block: Two-Factor Auth with AWS Cognito

- e.g. use SMS or Auth-App to secure the login even more

==== (Optional) Building Block: Social Login (e.g. Facebook) for the todo app

- integrate Facebook or Google as an additional login mechanism

==== Building Block: Generate thumbnails for the user profile

- short intro to AWS Lambda
- demonstrate AWS Lambda with Serverless and Java
- event-triggered Lambda that runs whenever someone creates a new account and uploads a profile pic to the S3 folder
- processing of the uploaded image to create a cropped thumbnail (e.g. 200px x 200px)

==== Cognito Observability

- how to monitor the user pool (e.g. failed login attempts, amount of users)
- might also be part of our general observability chapter